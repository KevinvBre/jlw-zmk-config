/*
 * Copyright (c) 2025 The ZMK Contributors
 * MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3) &ht LGUI  k1 &ht LALT k2  &ht LCTRL k3
#define HRMR(k1,k2,k3) &ht RCTRL k1 &ht LALT k2  &ht RGUI  k3

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        htskip: hold_tap_skip {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&lm_skip_mod>, <&kp>;
        };

        mt: mod_tap {
            flavor = "tap-preferred";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <220>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
            flavor = "tap-preferred";
        };

        b_ht: blocked_holdtap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&kp>;
            flavor = "tap-preferred";
        };

        combos {
            compatible = "zmk,combos";
            test1 {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&as LBKT>;
            };     
            test2 {
                timeout-ms = <50>;
                key-positions = <11 12>;
                bindings = <&as RBKT>;
            };            
        };
    };

    macros {

        lm_skip_mod: lm_skip_mod {
            #binding-cells = <1>;
            compatible = "zmk,behavior-macro-one-param";
            bindings =            
            <&macro_release &kp LGUI>,  
            <&macro_param_1to1>,          
            <&macro_tap &kp MACRO_PLACEHOLDER>,
            <&macro_press &kp LGUI>;
        };

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            compatible = "zmk,behavior-macro-one-param";
            bindings =
              <&macro_press &kp LSHFT>,
              <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>,
              <&macro_release &kp LSHFT>;
        };              
        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
              <&macro_press>,
              <&macro_param_1to1>,
              <&macro_param_1to2>,
              <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
              <&macro_pause_for_release>,
              <&macro_release>,
              <&macro_param_1to1>,
              <&macro_param_1to2>,
              <&as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮                                 ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp E      &kp R      &kp T                                        &kp Y      &kp L      &kp I      &kp Y      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤                                 ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp A      &kp S      &kp D      &kp T      &kp G                                        &kp H      &kp J      &kp K      &kp L     &kp ENTER     
        //├──────────┼──────────┼──────────┼──────────┼──────────┤                                 ├──────────┼──────────┼──────────┼──────────┼──────────┤
            HRML(Z,X,C              )      &kp D        &kp V                                        &kp K      &kp H      &as COMMA  &as DOT    &kp RS(FSLH)
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤                                 ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &ht LALT BSPC    &lm 1 LGUI          &trans                  &lt 2 SPACE   &bootloader
        //                                 ╰──────────┴──────────╯                                 ╰──────────┴──────────╯
            >;            
        };

        1 {
            bindings = <
        //╭─────────────────────┬───-───────┬    ───────────────┬──────────┬──────────╮           ╭──────────┬──────────┬──────────┬───────────────────────────┬─────────────────────────╮
            &htskip ESC LC(LG(LS(N4)))      &b_ht A W      &lm_skip_mod E    &trans     &trans                 &trans    &trans      &trans     &lm_skip_mod  C_VOL_DN     &lm_skip_mod C_VOL_UP
        //├─────────────────────┼─────-─────┼    ───────────────┼──────────┼──────────┤           ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &as TAB               &none           &as TAB          &trans       &trans               &trans    &trans      &trans    &trans      &trans
        //├─────────────────────┼─────-─────┼    ───────────────┼───────────┼──────────┤          ├──────────┼──────────┼──────────┼──────────┼──────────┤       
            &kp LSFT              &trans           &trans          &trans       &trans               &trans    &trans      &trans    &trans      &trans
        //╰──────────┴──────────────────────┴     ─────────────┼────────────┼──────────┤          ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                                   &kp BSPC      &none       &trans        &trans     &trans
        //                                                      ╰───────────┴──────────╯          ╰──────────┴──────────╯
            >;            
        };


        2 {
            bindings = <
        //&kp LC(LG(LS(N4))) 
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮                  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &as N1     &as N2     &as N3     &as N4     &as N5                         &as BSLH   &none      &kp UP     &none     &studio_unlock
        //├──────────┼──────────┼──────────┼──────────┼──────────┤                  ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &as N6     &as N7    &as N8      &as N9     &as 0                           &as DQT      &kp LEFT  &kp DOWN    &kp RIGHT &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤                  ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │                  │          │          │          │          │          │
            &kp LSFT    &kp X       &kp C     &kp V     &kp B                           &as MINUS  &as EQUAL  &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤                  ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp BSPC   &kp LGUI          &trans              &none    &bootloader
        //                                 ╰──────────┴──────────╯                  ╰──────────┴──────────╯
            >;            
        };

      

    };
};
